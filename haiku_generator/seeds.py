import random

natural_elements = [
    "Lake",
    "Dell",
    "Valley",
    "Forest",
    "Swamp",
    "Prairie",
    "River",
    "Mountain",
    "Sea",
    "Ocean",
    "Desert",
    "Canyon",
    "Plateau",
    "Fjord",
    "Tundra",
    "Iceberg",
    "Volcano",
    "Archipelago",
    "Waterfall",
    "Reef",
    "Bay",
    "Gorge",
    "Moor",
    "Wetland",
    "Savanna",
    "Rainforest",
    "Mesa",
    "Butte",
    "Glade",
    "Marsh",
    "Estuary",
    "Creek",
    "Brook",
    "Atoll",
    "Glacier",
    "Hill",
    "Meadow",
    "Knoll",
    "Copse",  # a small group of trees
    "Ridge"
]

animals = [
    "Eagle",
    "Butterfly",
    "Wolf",
    "Salmon",
    "Bear",
    "Falcon",
    "Ant",
    "Deer",
    "Whale",
    "Pigeon",
    "Bee",
    "Fox",
    "Dolphin",
    "Sparrow",
    "Mosquito",
    "Elk",
    "Shark",
    "Owl",
    "Ladybug",
    "Lion",
    "Penguin",
    "Dragonfly",
    "Moose",
    "Octopus",
    "Robin",
    "Cockroach",
    "Horse",
    "Jellyfish",
    "Cardinal",
    "Spider",
    "Rabbit",
    "Sea Turtle",
    "Hummingbird",
    "Grasshopper",
    "Tiger",
    "Seahorse",
    "Blue Jay",
    "Termite",
    "Squirrel",
    "Starfish",
    "Woodpecker",
    "Antelope",
    "Beetle",
    "Giraffe",
    "Goldfish",
    "Wren",
    "Scorpion",
    "Kangaroo",
    "Coral",
    "Crow",
    "Centipede",
    "Zebra",
    "Snail",
    "Crane",
    "Wasp",
    "Hippopotamus",
    "Toucan",
    "Lizard",
    "Caterpillar",
    "Gazelle",
    "Clownfish",
    "Finch",
    "Flea",
    "Rhino",
    "Gorilla",
    "Gecko",
    "Butterfly Fish",
    "Parrot",
    "Firefly",
    "Leopard",
    "Chameleon"
]

moods = [
    "Joyful",
    "Content",
    "Serene",
    "Optimistic",
    "Euphoric",
    "Calm",
    "Cheerful",
    "Reflective",
    "Peaceful",
    "Excited",
    "Enthusiastic",
    "Amused",
    "Proud",
    "Confident",
    "Hopeful",
    "Grateful",
    "Inspired",
    "Fascinated",
    "Satisfied",
    "Relieved",
    "Nostalgic",
    "Melancholic",
    "Lonely",
    "Pensive",
    "Anxious",
    "Overwhelmed",
    "Irritable",
    "Angry",
    "Frustrated",
    "Sad",
    "Disappointed",
    "Gloomy",
    "Despairing",
    "Guilty",
    "Ashamed",
    "Jealous",
    "Envious",
    "Insecure",
    "Bored",
    "Apathetic",
    "Curious",
    "Surprised",
    "Amazed",
    "Confused",
    "Perplexed",
    "Disgusted",
    "Agitated",
    "Startled",
    "Dismayed",
    "Embarrassed",
    "Shy",
    "Humble",
    "Alarmed",
    "Eager",
    "Weary",
    "Stressed",
    "Exhausted",
    "Burnt out"
]

emotions = [
    "Happiness",
    "Sadness",
    "Anger",
    "Fear",
    "Disgust",
    "Surprise",
    "Trust",
    "Anticipation",
    "Joy",
    "Optimism",
    "Love",
    "Submission",
    "Awe",
    "Disapproval",
    "Remorse",
    "Contempt",
    "Aggressiveness",
    "Interest",
    "Serenity",
    "Apprehension",
    "Annoyance",
    "Curiosity",
    "Acceptance",
    "Boredom",
    "Loneliness",
    "Admiration",
    "Amusement",
    "Contentment",
    "Excitement",
    "Shame",
    "Guilt",
    "Pride",
    "Envy",
    "Gratitude",
    "Hope",
    "Despair",
    "Embarrassment",
    "Empathy",
    "Sympathy",
    "Inspiration",
    "Frustration",
    "Elation",
    "Satisfaction",
    "Relief",
    "Nostalgia",
    "Melancholy",
    "Indignation",
    "Jealousy",
    "Schadenfreude",
    "Eagerness",
    "Anxiety",
    "Humiliation",
    "Panic",
    "Rage",
    "Horror",
    "Grief",
    "Delight",
    "Ecstasy",
    "Defeat",
    "Triumph",
    "Bliss",
    "Dismay",
    "Disillusionment",
    "Enthrallment",
    "Resentment"
]

pre_industrial_occupations = [
    "Apothecary",
    "Blacksmith",
    "Cooper",
    "Chandler",
    "Carpenter",
    "Cartographer",
    "Cobbler",
    "Falconer",
    "Farmer",
    "Fisherman",
    "Fletcher",
    "Glassblower",
    "Herbalist",
    "Ironmonger",
    "Mason",
    "Miller",
    "Miner",
    "Weaver",
    "Baker",
    "Brewer",
    "Butcher",
    "Dyer",
    "Forester",
    "Hunter",
    "Jeweler",
    "Locksmith",
    "Mercer",
    "Peddler",
    "Potter",
    "Ropemaker",
    "Saddler",
    "Scabbard Maker",
    "Shipwright",
    "Silversmith",
    "Stonecutter",
    "Tailor",
    "Tanner",
    "Thatcher",
    "Wheelwright",
    "Woodcutter",
    "Alchemist",
    "Armorer",
    "Barber",
    "Bowyer",
    "Candlemaker",
    "Fishmonger",
    "Glover",
    "Haberdasher",
    "Innkeeper",
    "Launderer",
    "Leatherworker",
    "Midwife",
    "Page",
    "Parchmenter",
    "Physician",
    "Plowman",
    "Scribe",
    "Seamstress",
    "Shepherd",
    "Soapmaker",
    "Surgeon",
    "Vintner",
    "Waterbearer",
    "Wainwright",
    "Bookbinder",
    "Bard",
    "Minstrel",
    "Troubadour",
    "Illuminator",
    "Knight",
    "Noble",
    "Peasant",
    "Serf",
    "Yeoman",
    "Viking",
    "Samurai",
    "Ninja"
]

stages_of_life = [
    "Newborn",
    "Boy",
    "Girl",
    "Infant",
    "Baby",
    "Toddler",
    "Child",
    "Youth",
    "Teenager",
    "Young Man",
    "Young Woman",
    "Man",
    "Woman",
    "Middle-Aged Man",
    "Middle-Aged Woman",
    "Old Man",
    "Old Woman",
]

times_of_day = [
    "Sunrise",
    "Dawn",
    "Early Morning",
    "Morning",
    "Midmorning",
    "Noon",
    "Afternoon",
    "Midafternoon",
    "Late Afternoon",
    "Twilight",
    "Dusk",
    "Evening",
    "Night",
    "Midnight",
    "Late Night",
    "Wee Hours"
]

# create a function I can export that will pick a random word from 3 - 4 of the lists above
# and pick a word from each list and return them as a string
def get_seed_words():
    random_word_list = []
    lists = [natural_elements, animals, moods, emotions, pre_industrial_occupations, stages_of_life, times_of_day]
    amount = random.randint(3, 4)
    # pick a random list from the lists do not repeat
    for i in range(amount):
        random_list = random.choice(lists)
        random_word = random.choice(random_list)
        random_word_list.append(random_word)
        lists.remove(random_list)
    # return string of random words

    return ', '.join(random_word_list)

   